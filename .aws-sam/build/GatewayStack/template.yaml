AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Core infrastructure including API Gateway with centralized Cognito authorizer,
  and EventBus.
Parameters:
  CognitoUserPoolArn:
    Type: String
    Description: ARN of the Cognito User Pool for the authorizer.
  ProductsLambdaArn:
    Type: String
    Description: ARN of the Lambda function for product management.
  StrapiWebhookLambdaArn:
    Type: String
    Description: ARN of the Lambda function for handling Strapi webhooks.
  PaystackWebhookLambdaArn:
    Type: String
    Description: ARN of the Lambda function for handling Paystack webhooks.
  SKUsByPriceLambdaArn:
    Type: String
    Description: ARN of the Lambda function for fetching SKUs by price.
Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      TracingEnabled: true
      Cors:
        AllowMethods: '''GET,POST,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn:
              Ref: CognitoUserPoolArn
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: DwellWell API
          version: 1.0.0
        paths:
          /products/v1:
            post:
              x-amazon-apigateway-integration:
                uri:
                  Ref: ProductsLambdaArn
                httpMethod: POST
                type: aws_proxy
          /products/v1/skus-by-price:
            get:
              x-amazon-apigateway-integration:
                uri:
                  Ref: SKUsByPriceLambdaArn
                httpMethod: GET
                type: aws_proxy
          /webhooks/v1/paystack:
            post:
              x-amazon-apigateway-integration:
                uri:
                  Ref: PaystackWebhookLambdaArn
                httpMethod: POST
                type: aws_proxy
          /webhooks/v1/strapi:
            post:
              x-amazon-apigateway-integration:
                uri:
                  Ref: StrapiWebhookLambdaArn
                httpMethod: POST
                type: aws_proxy
  AppEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: DwellWellAppEventBus
  EventBusPutEventsPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      EventBusName:
        Ref: AppEventBus
      StatementId: AllowPutEvents
      Action: events:PutEvents
      Principal: '*'
  ProductsLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ProductsLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  SKUsByPriceLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: SKUsByPriceLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  PaystackWebhookLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: PaystackWebhookLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  StrapiWebhookLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: StrapiWebhookLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
Outputs:
  ApiGatewayId:
    Value:
      Ref: ApiGateway
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/
