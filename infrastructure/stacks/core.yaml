AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Core infrastructure including API Gateway with centralized Cognito authorizer, and EventBus.

Parameters:
  CognitoUserPoolArn:
    Type: String
    Description: ARN of the Cognito User Pool for the authorizer.
  ProductsLambdaArn:
    Type: String
    Description: ARN of the Lambda function for product management.
  # PaymentsLambdaArn:
  #   Type: String
  #   Description: ARN of the Lambda function for processing payments.

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      TracingEnabled: true
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Ref CognitoUserPoolArn
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: DwellWell API
          version: 1.0.0
        paths:
          /orders/v1:
            post:
              x-amazon-apigateway-integration:
                uri: !ImportValue OrdersLambdaArn
                httpMethod: POST
                type: aws_proxy
              security:
                - CognitoAuthorizer: []
          /products/v1:
            post:
              x-amazon-apigateway-integration:
                uri: !Ref ProductsLambdaArn
                httpMethod: POST
                type: aws_proxy
          /products/v1/skus-by-price:
            get:
              x-amazon-apigateway-integration:
                uri: !ImportValue SKUsByPriceLambdaArn
                httpMethod: GET
                type: aws_proxy
          # /payments/v1/initialize:
          #   post:
          #     x-amazon-apigateway-integration:
          #       uri: !ImportValue PaymentsLambdaArn
          #       httpMethod: POST
          #       type: aws_proxy
          #     security:
          #       - CognitoAuthorizer: []
          /ratings/v1:
            post:
              x-amazon-apigateway-integration:
                uri: !ImportValue RatingsLambdaArn
                httpMethod: POST
                type: aws_proxy
              security:
                - CognitoAuthorizer: []
          /webhooks/v1/paystack:
            post:
              x-amazon-apigateway-integration:
                uri: !ImportValue PaystackWebhookLambdaArn
                httpMethod: POST
                type: aws_proxy
          /webhooks/v1/strapi:
            post:
              x-amazon-apigateway-integration:
                uri: !ImportValue StrapiWebhookLambdaArn
                httpMethod: POST
                type: aws_proxy

  AppEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: DwellWellAppEventBus

  EventBusPutEventsPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      EventBusName: !Ref AppEventBus
      Policy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - events:PutEvents
            Principal:
              AWS: '*'
            AWS:
              - 'arn:aws:iam::${AWS::AccountId}:*'
              - 'arn:aws:iam::${AWS::AccountId}:*'

  ApiGatewayInvokePermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue OrdersLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  ProductsLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue ProductsLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  SKUsByPriceLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue SKUsByPriceLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  # PaymentsLambdaInvokePermission:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #     FunctionName: !ImportValue PaymentsLambdaArn
  #     Action: lambda:InvokeFunction
  #     Principal: apigateway.amazonaws.com

  RatingsLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue RatingsLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  PaystackWebhookLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue PaystackWebhookLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  StrapiWebhookLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue StrapiWebhookLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

Outputs:
  ApiGatewayId:
    Value: !Ref ApiGateway
  AppEventBusName:
    Value: !Ref AppEventBus
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
